页面详细设计 - 雇主模块雇主模块是平台为用工方提供的核心功能区，包括工作台、工作管理（发布、编辑、查看申请）、订单管理、档案管理、钱包、评价及认证等。所有页面均在 UserCenterLayout 框架内，使用左侧 UserCenterSidebar.vue 进行导航。1. employer/Dashboard.vue (雇主工作台)总体设计: 概览雇主的核心数据和常用操作入口。布局设计:<PageTitle title="我的工作台 (雇主)" />数据概览区 (<el-row :gutter="20">):<el-col :span="8"><el-card shadow="hover"><div class="statistic-card">发布中工作 <span class="value">{{ stats.activeJobs || 0 }}</span></div></el-card></el-col><el-col :span="8"><el-card shadow="hover"><div class="statistic-card">待处理申请 <span class="value">{{ stats.pendingApplications || 0 }}</span></div></el-card></el-col><el-col :span="8"><el-card shadow="hover"><div class="statistic-card">进行中订单 <span class="value">{{ stats.activeOrders || 0 }}</span></div></el-card></el-col>快捷入口区 (<el-card shadow="never" title="常用操作" style="margin-top: 20px;">):<el-button type="primary" @click="navigateTo('/user/employer/jobs/post')" :icon="Plus">发布新工作</el-button> (政务红)<el-button type="primary" plain @click="navigateTo('/user/employer/jobs/posted')">我发布的工作</el-button> (边框红色)<el-button type="primary" plain @click="navigateTo('/user/employer/orders')">我的订单</el-button> (边框红色)<el-button type="default" @click="navigateTo('/user/employer/profile/edit')">完善雇主档案</el-button>近期申请概览 (可选, <el-card shadow="never" title="最新收到的申请" style="margin-top: 20px;">):列表简要展示最近几条工作申请，点击可跳转至该工作的申请列表。按钮设计与跳转:统计卡片: 点击可跳转至对应列表页。常用操作按钮:设计: type="primary" (政务红) 或 type="primary" plain (边框红色)。跳转: 分别跳转至 /user/employer/jobs/post, /user/employer/jobs/posted, /user/employer/orders, /user/employer/profile/edit。美术风格: 数据卡片简洁，数值醒目。2. employer/PostJob.vue (发布工作)总体设计: 提供清晰、高效的工作信息发布表单。布局设计:<PageTitle title="发布新工作" /><el-card shadow="never"><el-form ref="jobForm" :model="jobData" :rules="rules" label-width="120px">工作标题: <el-form-item label="工作标题" prop="title"><el-input v-model="jobData.title" placeholder="例如：周末兼职传单派发员" /></el-form-item>工作描述: <el-form-item label="工作描述" prop="description"><el-input type="textarea" :rows="5" v-model="jobData.description" placeholder="详细描述工作内容、职责、福利待遇等..." /></el-form-item>工作类别: <el-form-item label="工作类别" prop="job_category"><el-select v-model="jobData.job_category" placeholder="选择工作类别"><el-option ... /></el-select></el-form-item> (选项可来自后端或固定)工作标签: <el-form-item label="工作标签" prop="job_tags"><el-select v-model="jobData.job_tags" multiple filterable allow-create default-first-option placeholder="输入或选择标签，回车创建"><el-option ... /></el-select></el-form-item>工作地点:<el-form-item label="省市区" prop="locationArr"><el-cascader v-model="jobData.locationArr" :options="cityOptions" placeholder="选择省/市/区" @change="handleLocationChange" /></el-form-item><el-form-item label="详细地址" prop="location_address"><el-input v-model="jobData.location_address" placeholder="街道、门牌号等" /></el-form-item>(可选) 地图选点按钮，自动填充经纬度。<el-form-item label="经度" prop="longitude"><el-input-number v-model="jobData.longitude" :precision="6" :step="0.000001" /></el-form-item><el-form-item label="纬度" prop="latitude"><el-input-number v-model="jobData.latitude" :precision="6" :step="0.000001" /></el-form-item>工作时间:<el-form-item label="开始时间" prop="start_time"><el-date-picker v-model="jobData.start_time" type="datetime" placeholder="选择开始时间" /></el-form-item><el-form-item label="结束时间" prop="end_time"><el-date-picker v-model="jobData.end_time" type="datetime" placeholder="选择结束时间" /></el-form-item>薪资待遇:<el-form-item label="薪资金额" prop="salary_amount"><el-input-number v-model="jobData.salary_amount" :precision="2" :min="0" /></el-form-item><el-form-item label="计薪方式" prop="salary_type"><el-select v-model="jobData.salary_type"><el-option label="按时" value="hourly"/><el-option label="按天" value="daily"/><el-option label="按周" value="weekly"/><el-option label="按月" value="monthly"/><el-option label="固定总价" value="fixed"/><el-option label="面议" value="negotiable"/></el-select></el-form-item><el-form-item label="薪资可议" prop="salary_negotiable"><el-switch v-model="jobData.salary_negotiable" /></el-form-item>需求人数: <el-form-item label="需求人数" prop="required_people"><el-input-number v-model="jobData.required_people" :min="1" /></el-form-item>技能要求: <el-form-item label="技能要求描述" prop="skill_requirements"><el-input type="textarea" v-model="jobData.skill_requirements" placeholder="如：熟练使用Office办公软件" /></el-form-item>(可选) <el-form-item label="关联技能标签"><el-select v-model="jobData.required_skill_ids" multiple placeholder="选择所需技能"><el-option v-for="s in publicSkills" :key="s.id" :label="s.name" :value="s.id" /></el-select></el-form-item> (获取 GET /skills/ )是否急聘: <el-form-item label="是否急聘" prop="is_urgent"><el-switch v-model="jobData.is_urgent" /></el-form-item>报名截止: <el-form-item label="报名截止时间" prop="application_deadline"><el-date-picker v-model="jobData.application_deadline" type="datetime" placeholder="选择截止时间" /></el-form-item><el-form-item><el-button type="primary" @click="submitJobPost" :loading="loading">确认发布</el-button> (政务红)<el-button @click="saveDraft" :disabled="loading">保存草稿</el-button> (后端接口缺失)</el-form-item>按钮设计与跳转:确认发布按钮: type="primary" (政务红)。调用 POST /jobs/。成功后跳转至 /user/employer/jobs/posted 或新发布的工作详情。保存草稿按钮: type="default"。调用保存草稿接口 (后端缺失)。美术风格: 表单项分组清晰，必填项有明显标记。使用 Element Plus 的日期、数字、选择等组件。3. employer/EditJob.vue (编辑工作)总体设计: 与发布工作页面类似，但表单会预填充已有工作的数据。布局设计:<PageTitle title="编辑工作信息" /><el-card shadow="never"> ... (表单结构同 PostJob.vue) ... </el-card>表单数据 (jobData) 通过 GET /jobs/{job_id} 接口在页面加载时获取并填充。按钮设计与跳转:确认修改按钮: type="primary" (政务红)。调用 PUT /jobs/{job_id}。成功后跳转回 /user/employer/jobs/posted 或当前工作详情。美术风格: 与发布页面保持一致。4. employer/MyPostedJobs.vue (我发布的工作)总体设计: 列表展示雇主发布的所有工作，提供管理操作。布局设计:<PageTitle title="我发布的工作" />筛选/工具栏 (<el-card shadow="never" style="margin-bottom:16px;">):<el-tabs v-model="filterStatus" @tab-change="fetchPostedJobs"> (按工作状态筛选: "全部", "招聘中", "已满员", "已结束", "已取消")<el-input v-model="searchKeyword" placeholder="搜索工作标题" clearable @keyup.enter="fetchPostedJobs" style="width: 200px; margin-left: 20px;" /><el-button type="primary" @click="fetchPostedJobs" :icon="Search" style="margin-left:10px;">搜索</el-button> (政务红)工作列表区 (<el-table :data="postedJobs" stripe style="width: 100%">):<el-table-column prop="title" label="工作标题" width="250"><template #default="scope"><el-link type="primary" @click="navigateToJobDetail(scope.row.id)">{{ scope.row.title }}</el-link></template></el-table-column><el-table-column prop="status_display" label="状态"><template #default="scope"><el-tag :type="getStatusTagType(scope.row.status)">{{ scope.row.status_display }}</el-tag></template></el-table-column><el-table-column prop="required_people" label="需求/已录用" width="120"><template #default="scope">{{ scope.row.accepted_people }}/{{ scope.row.required_people }}</template></el-table-column><el-table-column prop="created_at" label="发布时间" :formatter="formatTableDate" /><el-table-column label="操作" width="300" fixed="right"> <template #default="scope"><el-button type="text" size="small" @click="navigateToJobApplicants(scope.row.id)">查看申请 ({{ scope.row.application_count || 0 }})</el-button><el-button type="text" size="small" @click="navigateToEditJob(scope.row.id)">编辑</el-button><el-button type="text" size="small" @click="duplicateJob(scope.row.id)">复制</el-button><el-button type="text" size="small" @click="closeJob(scope.row.id)" v-if="scope.row.status === 'open' || scope.row.status === 'recruiting'">关闭招聘</el-button> (政务红文字)<el-button type="text" size="small" @click="deleteJob(scope.row.id)" style="color: #F56C6C;" v-if="canDelete(scope.row.status)">删除</el-button></template></el-table-column><el-pagination ... />按钮设计与跳转:Tabs 切换调用 fetchPostedJobs (接口 GET /jobs/my_posted 带 status 参数)。搜索按钮: type="primary" (政务红)。查看申请按钮: type="text"。跳转至 /user/employer/jobs/{job_id}/applicants。编辑按钮: type="text"。跳转至 /user/employer/jobs/{job_id}/edit。复制按钮: type="text"。调用 POST /jobs/{job_id}/duplicate，成功后可提示并刷新列表。关闭招聘按钮: type="text"，政务红。调用 POST /jobs/{job_id}/close。删除按钮: type="text"，红色。调用 DELETE /jobs/{job_id}。美术风格: 表格清晰，操作按钮集中。状态标签颜色分明。5. employer/JobApplicants.vue (查看工作申请)总体设计: 针对特定工作，列表展示所有申请者信息，并进行处理。布局设计:<PageTitle :title="'对《' + jobTitle + '》的申请'" /> (jobTitle 从路由参数或接口获取)筛选/工具栏 (<el-card shadow="never" style="margin-bottom:16px;">):<el-tabs v-model="filterStatus" @tab-change="fetchApplicants"> (按申请状态: "全部", "待处理", "已接受", "已拒绝")申请列表区 (<el-table :data="applicants" stripe>):<el-table-column label="申请人头像" width="100"><template #default="scope"><el-avatar :src="scope.row.freelancer_info?.avatar_url || defaultAvatar" /></template></el-table-column><el-table-column prop="freelancer_info.nickname" label="申请人昵称" /><el-table-column prop="application_message" label="申请留言" show-overflow-tooltip /><el-table-column prop="created_at" label="申请时间" :formatter="formatTableDate" /><el-table-column prop="status_display" label="状态"><template #default="scope"><el-tag :type="getApplicationStatusTag(scope.row.status)">{{ scope.row.status_display }}</el-tag></template></el-table-column><el-table-column label="操作" width="220" fixed="right"> <template #default="scope"><el-button type="text" size="small" @click="viewApplicantDetail(scope.row.id)">查看详情</el-button><el-button type="primary" plain size="small" @click="processApplication(scope.row.id, 'accepted')" v-if="scope.row.status === 'pending'">接受</el-button> (边框红色)<el-button type="danger" plain size="small" @click="showRejectDialog(scope.row.id)" v-if="scope.row.status === 'pending'">拒绝</el-button></template></el-table-column><el-pagination ... />拒绝申请对话框 (<FrostedGlassDialog v-model="rejectDialogVisible" title="拒绝申请">):<el-form-item label="拒绝原因 (可选)"><el-input type="textarea" v-model="rejectionReason" /></el-form-item><el-button @click="rejectDialogVisible = false">取消</el-button><el-button type="primary" @click="confirmRejectApplication">确认拒绝</el-button> (政务红)按钮设计与跳转:查看详情按钮: type="text"。打开模态框显示完整申请信息，或跳转到申请人零工档案公共页 (若有)。调用 GET /job_applications/{application_id}。接受按钮: type="primary" plain (边框红色)。调用 PUT /job_applications/{application_id}/process，参数 { status: 'accepted' }。拒绝按钮 (表格内): type="danger" plain。打开拒绝理由对话框。确认拒绝按钮 (对话框内): type="primary" (政务红)。调用 PUT /job_applications/{application_id}/process，参数 { status: 'rejected', reason: rejectionReason }。美术风格: 申请人信息清晰，处理操作直接。6. employer/MyOrders.vue (我的订单 - 雇主视角)总体设计: 展示雇主已发起或相关的订单信息。布局设计: (与零工的 MyOrders.vue 类似，但操作不同)<PageTitle title="我的订单 (雇主)" />筛选/工具栏 (Tabs 按订单状态)订单列表区:<OrderCard v-for="order in orders" :key="order.id" :data="order" user-role="employer" @action="handleOrderAction" />卡片内容: 工作标题、零工信息、订单金额、状态。操作 (根据订单状态 order.status 和 order.employer_confirmation_status):pending_payment (若有此状态): "去支付" (政务红，调用支付接口)。pending_employer_confirmation: "确认完成" (调用 actions 接口，action: 'confirm_completion')。completed: "评价零工" (后端缺失评价接口)。可取消状态: "取消订单"。分页、空状态等。按钮设计与跳转:订单卡片内操作按钮: type="primary" (政务红，如支付) 或 type="primary" plain。美术风格: 与零工订单页保持一致性，仅操作点不同。7. employer/ProfileEdit.vue (雇主档案编辑)总体设计: 允许雇主创建或编辑其企业或个人雇主档案。布局设计:<PageTitle title="编辑我的雇主档案" /><el-card shadow="never"><el-form ref="profileForm" :model="employerProfileData" :rules="rules" label-width="140px">档案类型: <el-form-item label="档案类型" prop="profile_type"><el-radio-group v-model="employerProfileData.profile_type" @change="handleProfileTypeChange"><el-radio label="individual">个人雇主</el-radio><el-radio label="company">企业雇主</el-radio></el-radio-group></el-form-item>通用字段:头像/Logo: <el-upload ... />昵称/简称: <el-input v-model="employerProfileData.nickname" />真实姓名 (个人)/联系人: <el-input v-model="employerProfileData.real_name" />所在地区: <el-cascader ... />联系电话: <el-input v-model="employerProfileData.contact_phone" />企业雇主特有字段 (v-if="employerProfileData.profile_type === 'company'"):公司名称: <el-input v-model="employerProfileData.company_name" />统一社会信用代码: <el-input v-model="employerProfileData.business_license_number" />营业执照照片: <el-upload ... />公司地址: <el-input v-model="employerProfileData.company_address" />公司简介: <el-input type="textarea" v-model="employerProfileData.company_description" /><el-form-item><el-button type="primary" @click="submitProfile" :loading="loading">保存档案</el-button></el-form-item> (政务红)按钮设计与跳转:保存档案按钮: type="primary" (政务红)。调用 PUT /profiles/employer/me。美术风格: 根据档案类型动态显示不同表单项。8. employer/Verification.vue (雇主认证)总体设计: 引导雇主完成个人或企业资质认证。布局设计: (与零工的 Verification.vue 类似，但 profile_type 和 submitted_data 字段不同)<PageTitle title="我的认证 (雇主)" />当前认证状态区。提交认证表单区:认证类型选择 (如果用户未创建档案时直接进入认证): <el-radio-group v-model="verificationData.profile_type"><el-radio label="employer_individual">个人认证</el-radio><el-radio label="employer_company">企业认证</el-radio></el-radio-group>submitted_data 字段根据 profile_type 变化:employer_individual: 真实姓名、身份证号、身份证照片。employer_company: 公司名称、营业执照号、营业执照照片、法人信息等 (根据后端 VerificationSubmissionInput 的 example 调整)。历史认证记录区。按钮设计与跳转:提交认证申请按钮: type="primary" (政务红)。调用 POST /verifications/submit。美术风格: 清晰区分个人认证和企业认证的表单项。雇主模块的钱包和评价页面设计将与零工模块类似，等待后端接口明确后再细化。