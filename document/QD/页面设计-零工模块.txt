页面详细设计 - 零工模块零工模块是平台为零工用户提供的核心功能区，包含工作台、申请管理、订单管理、档案与技能管理、钱包、评价及认证等。所有页面均在 UserCenterLayout 框架内，使用左侧 UserCenterSidebar.vue 进行导航。1. freelancer/Dashboard.vue (零工工作台)总体设计: 概览零工用户的核心数据和常用操作入口，提供个性化推荐。布局设计:<PageTitle title="我的工作台 (零工)" />数据概览区 (<el-row :gutter="20">):<el-col :span="8"><el-card shadow="hover"><div class="statistic-card">待处理申请 <span class="value">{{ stats.pendingApplications || 0 }}</span></div></el-card></el-col><el-col :span="8"><el-card shadow="hover"><div class="statistic-card">进行中订单 <span class="value">{{ stats.activeOrders || 0 }}</span></div></el-card></el-col><el-col :span="8"><el-card shadow="hover"><div class="statistic-card">本月收入 <span class="value">¥{{ stats.monthlyIncome || '0.00' }}</span></div></el-card></el-col>(卡片背景可使用浅色调，数值使用政务红或主蓝突出)快捷入口区 (<el-card shadow="never" title="常用操作" style="margin-top: 20px;">):<el-button type="primary" plain @click="navigateTo('/user/freelancer/applications')">我的申请</el-button> (边框红色)<el-button type="primary" plain @click="navigateTo('/user/freelancer/orders')">我的订单</el-button> (边框红色)<el-button type="primary" plain @click="navigateTo('/jobs')">去工作广场看看</el-button> (边框红色)<el-button type="default" @click="navigateTo('/user/freelancer/profile/edit')">完善零工档案</el-button>推荐工作区 (<el-card shadow="never" title="为你推荐" style="margin-top: 20px;">):列表或卡片展示 3-5 个推荐工作 (使用 DataCard.vue)。调用 GET /jobs/recommendations 接口获取数据。<el-button type="text" @click="navigateTo('/jobs')">查看更多推荐 &gt;</el-button> (政务红文字)按钮设计与跳转:统计卡片: 点击可跳转至对应列表页 (如“待处理申请”-> 我的申请页并筛选)。常用操作按钮:设计: type="primary" plain (边框红色) 或 type="default"。跳转: 分别跳转至 /user/freelancer/applications, /user/freelancer/orders, /jobs, /user/freelancer/profile/edit。推荐工作卡片“查看详情”: 跳转至 JobDetail。“查看更多推荐”: 跳转至 /jobs (可带特定推荐筛选参数，若有)。美术风格: 数据卡片简洁，数值醒目。推荐工作区域与首页类似。2. freelancer/MyApplications.vue (我的申请)总体设计: 列表展示零工提交的所有工作申请及其状态，方便追踪和管理。布局设计:<PageTitle title="我的申请" />筛选/工具栏 (<el-card shadow="never" style="margin-bottom:16px;">):<el-tabs v-model="filterStatus" @tab-change="fetchApplications"><el-tab-pane label="全部" name="all"></el-tab-pane><el-tab-pane label="待处理" name="pending"></el-tab-pane><el-tab-pane label="已接受" name="accepted"></el-tab-pane><el-tab-pane label="已拒绝" name="rejected"></el-tab-pane><el-tab-pane label="已取消" name="cancelled"></el-tab-pane></el-tabs>申请列表区:<ApplicationCard v-for="app in applications" :key="app.id" :data="app" @cancel="confirmCancelApplication" @view-detail="navigateToApplicationDetail"/> (自定义申请卡片组件)卡片内容: 工作标题 (链接到 JobDetail)、雇主名称、申请时间、申请留言摘要、当前状态 (<el-tag>)。操作: “取消申请” (仅在 pending 状态下显示，政务红文字按钮)、“查看详情”。<el-empty description="暂无申请记录" v-if="!loading && applications.length === 0" /><el-pagination ... @current-change="fetchApplications" />取消申请对话框 (<FrostedGlassDialog v-model="cancelDialogVisible" title="确认取消申请">):提示信息。(可选) 输入取消原因 <el-input type="textarea" v-model="cancelReason" />。<el-button @click="cancelDialogVisible = false">再想想</el-button><el-button type="primary" @click="handleCancelApplication">确认取消</el-button> (政务红)按钮设计与跳转:Tabs: 激活状态使用政务红下划线。切换 Tab 时调用 fetchApplications (接口 GET /job_applications/my 带 status 参数)。取消申请按钮 (卡片内):设计: type="text"，政务红文字。动作: 打开 cancelDialogVisible。确认取消按钮 (对话框内):设计: type="primary" (政务红)。动作: 调用 POST /job_applications/{application_id}/cancel 接口。成功后刷新列表。查看详情按钮 (卡片内):设计: type="text"。动作: (如果需要单独的申请详情页) router.push({ name: 'ApplicationDetail', params: { id: app.id } }) 或打开一个模态框显示完整申请信息和留言 (调用 GET /job_applications/{application_id})。美术风格: 列表清晰，状态标签醒目。对话框使用毛玻璃。3. freelancer/MyOrders.vue (我的订单 - 零工视角)总体设计: 展示零工已承接并正在进行或已完成的订单。布局设计: (与 MyApplications.vue 类似，使用 OrderCard.vue)<PageTitle title="我的订单 (零工)" />筛选/工具栏 (Tabs 按订单状态): "待开始", "进行中", "待确认", "已完成", "已取消"。订单列表区:<OrderCard v-for="order in orders" :key="order.id" :data="order" user-role="freelancer" @action="handleOrderAction" /> (自定义订单卡片组件，根据 user-role 显示不同操作)卡片内容: 工作标题、雇主信息、订单金额、计划时间、实际时间、状态。操作 (根据订单状态 order.status 和 order.freelancer_confirmation_status):pending_start: "开始工作" (调用 actions 接口，action: 'start_work')。in_progress: "完成工作" (打开对话框填写实际工时，调用 actions 接口，action: 'complete_work', 附带 start_time_actual, end_time_actual) 或 "更新实际工时" (调用 actual_times 接口)。pending_freelancer_confirmation (如果流程中有此步骤): "确认工时/金额"。completed: "评价雇主" (后端缺失评价接口)。可取消状态: "取消订单" (打开对话框填写原因，调用 actions 接口，action: 'cancel_order')。分页、空状态等。操作相关对话框 (<FrostedGlassDialog>): 如填写实际工时、取消订单原因。按钮设计与跳转:订单卡片内操作按钮: type="primary" plain (边框红色) 或 type="text"。点击后触发 handleOrderAction 或打开相应对话框。对话框内确认按钮: type="primary" (政务红)。美术风格: 订单信息全面，操作按钮根据状态动态显示，清晰引导。4. freelancer/ProfileEdit.vue (零工档案编辑)总体设计: 允许零工创建或编辑其详细个人档案。布局设计:<PageTitle title="编辑我的零工档案" /><el-card shadow="never"><el-form ref="profileForm" :model="freelancerProfileData" :rules="rules" label-width="120px">头像上传: <el-form-item label="头像" prop="avatar_url"><el-upload action="/api/v1/upload/image" :show-file-list="false" :on-success="handleAvatarSuccess"><el-avatar :size="100" :src="freelancerProfileData.avatar_url || defaultAvatar" /><el-button type="text" style="margin-left:10px;">点击上传</el-button></el-upload></el-form-item> (上传接口需后端提供)真实姓名: <el-form-item label="真实姓名" prop="real_name"><el-input v-model="freelancerProfileData.real_name" /></el-form-item>昵称: <el-form-item label="昵称" prop="nickname"><el-input v-model="freelancerProfileData.nickname" /></el-form-item>性别: <el-form-item label="性别" prop="gender"><el-radio-group v-model="freelancerProfileData.gender"><el-radio label="male">男</el-radio><el-radio label="female">女</el-radio><el-radio label="other">其他</el-radio></el-radio-group></el-form-item>出生日期: <el-form-item label="出生日期" prop="birth_date"><el-date-picker v-model="freelancerProfileData.birth_date" type="date" placeholder="选择日期" /></el-form-item>常驻城市: <el-form-item label="常驻城市" prop="location"><el-cascader v-model="locationArray" :options="cityOptions" placeholder="省/市/区" @change="handleLocationChange" /></el-form-item> (需要将 locationArray 转换为 location_province, location_city, location_district)个人简介: <el-form-item label="个人简介" prop="bio"><el-input type="textarea" v-model="freelancerProfileData.bio" :rows="4" /></el-form-item>工作偏好 (JSON): <el-form-item label="工作偏好" prop="work_preference_str"><el-input type="textarea" v-model="work_preference_str" placeholder="例如：{'categories': ['家政'], 'time_slots':['weekend']}" :rows="3" /><small>请输入JSON格式</small></el-form-item> (前端需要做 JSON 校验和转换)<el-form-item><el-button type="primary" @click="submitProfile" :loading="loading">保存档案</el-button></el-form-item> (政务红)按钮设计与跳转:保存档案按钮: type="primary" (政务红)。调用 PUT /profiles/freelancer/me 接口。美术风格: 表单清晰，头像上传交互友好。工作偏好考虑使用更友好的表单元素（如多选框、标签输入）替代直接输入JSON。5. freelancer/MySkills.vue (我的技能)总体设计: 展示和管理零工的技能列表。布局设计:<PageTitle title="我的技能" />操作栏 (<el-row justify="end" style="margin-bottom:16px;">):<el-button type="primary" @click="navigateToAddSkill" :icon="Plus">添加新技能</el-button> (政务红)技能列表区 (<el-table :data="mySkills" stripe style="width: 100%">):<el-table-column prop="skill.name" label="技能名称" /><el-table-column prop="skill.category" label="技能分类" /><el-table-column prop="proficiency_level" label="熟练度" /><el-table-column prop="years_of_experience" label="经验年限" /><el-table-column label="证书"> <template #default="scope"><el-link v-if="scope.row.certificate_url" :href="scope.row.certificate_url" type="primary" target="_blank">查看证书</el-link><span v-else>-</span></template></el-table-column><el-table-column label="操作" width="180"> <template #default="scope"><el-button type="text" size="small" @click="navigateToEditSkill(scope.row.skill_id)">编辑</el-button><el-button type="text" size="small" @click="confirmDeleteSkill(scope.row.skill_id, scope.row.skill.name)" style="color: #F56C6C;">删除</el-button></template></el-table-column><el-empty description="您还未添加任何技能" v-if="!loading && mySkills.length === 0" />删除确认对话框 (<FrostedGlassDialog>)按钮设计与跳转:添加新技能按钮: type="primary" (政务红)。跳转至 /user/freelancer/skills/add。编辑按钮 (表格内): type="text"。跳转至 /user/freelancer/skills/{skill_id}/edit。删除按钮 (表格内): type="text"，红色。打开删除确认对话框，确认后调用 DELETE /profiles/freelancer/me/skills/{skill_id}。美术风格: 表格清晰展示技能信息，操作便捷。6. freelancer/AddSkill.vue & freelancer/EditSkill.vue总体设计: 表单页面，用于添加或编辑技能信息。布局设计 (类似 ProfileEdit.vue 的表单布局):<PageTitle :title="isEditMode ? '编辑技能' : '添加新技能'" /><el-card shadow="never"><el-form ref="skillForm" :model="skillData" :rules="rules" label-width="100px">技能选择 (AddSkill): <el-form-item label="选择技能" prop="skill_id"><el-select v-model="skillData.skill_id" filterable placeholder="搜索或选择技能"><el-option v-for="s in publicSkills" :key="s.id" :label="s.name + ' (' + s.category + ')'" :value="s.id" /></el-select></el-form-item> (调用 GET /skills/ 获取 publicSkills)技能名称 (EditSkill, 只读): <el-form-item label="技能名称"><el-input :value="skillData.skill?.name" readonly /></el-form-item>熟练度: <el-form-item label="熟练度" prop="proficiency_level"><el-select v-model="skillData.proficiency_level" placeholder="选择熟练度"><el-option label="入门" value="beginner"/><el-option label="中级" value="intermediate"/><el-option label="高级" value="advanced"/><el-option label="专家" value="expert"/></el-select></el-form-item>经验年限: <el-form-item label="经验年限" prop="years_of_experience"><el-input-number v-model="skillData.years_of_experience" :min="0" /></el-form-item>证书链接: <el-form-item label="证书链接" prop="certificate_url"><el-input v-model="skillData.certificate_url" placeholder="http://example.com/certificate.pdf" /></el-form-item><el-form-item><el-button type="primary" @click="submitSkillForm" :loading="loading">确认提交</el-button></el-form-item> (政务红)按钮设计与跳转:确认提交按钮: type="primary" (政务红)。AddSkill: 调用 POST /profiles/freelancer/me/skills。EditSkill: 调用 PUT /profiles/freelancer/me/skills/{skill_id}。成功后跳转回 /user/freelancer/skills。美术风格: 标准表单样式。7. freelancer/Verification.vue (零工认证)总体设计: 引导用户完成实名认证流程，展示认证状态和历史记录。布局设计:<PageTitle title="我的认证 (零工)" />当前认证状态区 (<el-card shadow="never" v-if="currentVerification">):显示最近一次认证的 profile_type, status, submitted_at, reviewed_at, rejection_reason (若有)。状态标签 (<el-tag>) 根据 status 显示不同颜色。如果状态是 pending: "您的认证申请正在审核中..."如果状态是 rejected: 显示拒绝原因，并提供 "重新提交认证" 按钮。如果状态是 approved: "您已通过实名认证"。提交认证表单区 (<el-card shadow="never" v-if="canSubmitVerification"> - 根据逻辑判断是否显示):<el-form ref="verificationForm" :model="verificationData" :rules="rules" label-width="120px"><el-form-item label="认证类型" prop="profile_type"><el-input v-model="verificationData.profile_type" readonly disabled value="零工实名认证" /></el-form-item> (固定为 freelancer)submitted_data 的具体字段 (根据后端 VerificationSubmissionInput 的 example 设计):真实姓名: <el-form-item label="真实姓名" prop="submitted_data.real_name"><el-input v-model="verificationData.submitted_data.real_name" /></el-form-item>身份证号: <el-form-item label="身份证号" prop="submitted_data.id_card_number"><el-input v-model="verificationData.submitted_data.id_card_number" /></el-form-item>身份证照片: <el-form-item label="身份证照片" prop="submitted_data.id_card_photo_front_url"><el-upload action="/api/v1/upload/image" list-type="picture-card" ...>上传正面</el-upload> <el-upload ...>上传反面</el-upload></el-form-item> (上传接口需后端提供)<el-form-item><el-button type="primary" @click="submitVerification" :loading="loading">提交认证申请</el-button></el-form-item> (政务红)认证记录区 (<el-card shadow="never" title="历史认证记录" style="margin-top:20px;" v-if="verificationHistory.length > 0">):<el-table :data="verificationHistory" stripe> (展示 id, profile_type, status, submitted_at, reviewed_at)分页。按钮设计与跳转:提交认证申请/重新提交认证按钮: type="primary" (政务红)。调用 POST /verifications/submit。美术风格: 表单和信息展示清晰，上传组件使用 Element Plus 样式。其他模块如钱包、评价等，由于后端接口暂未提供，前端设计会依赖于后续接口的具体定义。但整体风格和组件选用会与上述页面保持一致。